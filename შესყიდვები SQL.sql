#რს_ის მხარე

drop view if exists პირველი;
create view პირველი as
select left(ზედნადები,10) as ზედნადების_ნომერი, ორგანიზაცია, if(ორგანიზაცია like "%დღგ%","დღგ","არადღგ") as იხდის_თუ_არა_დღგს
from ზედნადების;

drop view if exists მეორე;
create view მეორე as
select საქონლის_კოდი, საქონლის_დასახელება, ზომის_ერთეული, რაოდენობა, ერთეულის_ფასი,
       if(საქონლის_დასახელება like "%დასაბრუნებელი%",საქონლის_ფასი=0,საქონლის_ფასი) as საქონლის_ფასი,
       დაბეგვრა, left(ზედნადების_ნომერი,10) as ზედნადების_ნომერი, სტატუსი,მყიდველი, გამყიდველი,
       right(substring_index(გამყიდველი,")",1),char_length(substring_index(გამყიდველი,")",1))-1) as საიდენტიფიკაციო_კოდი, #საიდენტიფიკაციო კოდის ფორმულა
       reverse(substring_index(reverse(გამყიდველი),")",1)) as შპს,
       ზედნადების_ტიპი, ტრანსპორტირების_დაწყება, ტრანსპორტირების_დასრულება,
       case when ტრანსპორტირების_დასრულება regexp "დადია|დადიან" then "დადიანი"
            when ტრანსპორტირების_დასრულება regexp "პეკი|პეკინ" then "პეკინი"
            when ტრანსპორტირების_დასრულება regexp "ხიზა|ნიშვილი" then "გლდანი"
            when ტრანსპორტირების_დასრულება regexp "მანდე|დელშ|შტამი" then "ვარკეთილი"
            when ტრანსპორტირების_დასრულება regexp "წერე|რეთელი" then "წერეთელი"
            when ტრანსპორტირების_დასრულება regexp "ბელია|ელია|ელიაშვილი" then "ბელიაშვილი"
            when ზედნადების_ტიპი like "%გარეშ%" then "ტრანსპორტირების გარეშე"
       end as მიმღები_ფილიალი,
       date(ტრანსპორტირების_დაწყების_თარიღი) as ტრანსპორტირების_დაწყების_თარიღი
from პროდუქციის;

drop view if exists მესამე;
create view მესამე as
select მეორე.*, concat(დაბეგვრა,იხდის_თუ_არა_დღგს) as დაბეგვრა_იხდის_თუ_არა_დღგს,
	   if(concat(დაბეგვრა,იხდის_თუ_არა_დღგს)="ჩვეულებრივიდღგ",საქონლის_ფასი-საქონლის_ფასი/1.18,0) as დღგ_თანხა
from პირველი
join მეორე 
using(ზედნადების_ნომერი);

#ფინანსური ტრანზაქციების მხარე

drop view if exists მეოთხე;
create view მეოთხე as 
select date(თარიღი) as თარიღი, left(დოკუმენტი,10) as დოკუმენტი, თანხა, trim(დებეტი) as დებეტი, დდასახელება, 
if(დდასახელება like "%დღგ%", "დღგ", "არადღგ") as დღგ, trim(კრედიტი) as კრედიტი, 
reverse(substring_index(reverse(კრედიტი),"-",1)) as საიდენტიფიკაციო,კდასახელება as შპს
from ფინტრა
where trim(კრედიტი) like "3110%" and trim(დებეტი) not like "12%" and დოკუმენტი not like "02-%" and დოკუმენტი not like "ეა%" and დოკუმენტი is not null;

drop view if exists მეხუთე;
create view მეხუთე as 
select თარიღი,დოკუმენტი,თანხა,დებეტი, დდასახელება, 
case
when დებეტი like "16%" then mid(დებეტი,1,7)
when დებეტი like "2%"  then mid(დებეტი,1,7)
when დებეტი like "7%"  then mid(დებეტი,1,7)
else დებეტი
end as ფილიალის_კოდი, 
დღგ,კრედიტი, საიდენტიფიკაციო, შპს
from მეოთხე
where დღგ="არადღგ";

drop view if exists მეექვსე;
create view მეექვსე as
select distinct დოკუმენტი, ფილიალის_კოდი, ფილიალი
from მეხუთე
left join ფილიალები 
on მეხუთე.ფილიალის_კოდი=ფილიალები.კოდი;
#order by ფილიალი desc  

drop view if exists მეშვიდე;
create view მეშვიდე as 
select დოკუმენტი, ფილიალი, count(დოკუმენტი) as countდოკუმენტი
from მეექვსე
group by დოკუმენტი
having count(დოკუმენტი)>1;

drop view if exists მერვე;
create view მერვე as
select დოკუმენტი, ფილიალის_კოდი, if(ლოგიკა is null, "ხარჯი",ლოგიკა) as ფილიალი
from 
(select მეექვსე.დოკუმენტი, ფილიალის_კოდი, if(მეექვსე.ფილიალი="ხარჯი",მეშვიდე.ფილიალი,მეექვსე.ფილიალი) as ლოგიკა
from მეექვსე
left join მეშვიდე
using(დოკუმენტი)) as a
group by დოკუმენტი;

drop view if exists მეცხრე;
create view მეცხრე as
select მეოთხე.*,if(მერვე.ფილიალი like "%წერეთ%","წერეთელი",მერვე.ფილიალი) as ფილიალი
from მეოთხე
left join მერვე
using(დოკუმენტი);

drop view if exists მეათე;
create view მეათე as
select * from
(select თარიღი,დოკუმენტი,საიდენტიფიკაციო,შპს
from მეცხრე
union
select ტრანსპორტირების_დაწყების_თარიღი,ზედნადების_ნომერი,საიდენტიფიკაციო_კოდი,შპს
from მესამე) as b
group by 1,2,3;

drop view if exists თანხა_რს;
create view თანხა_რს as
select ტრანსპორტირების_დაწყების_თარიღი,ზედნადების_ნომერი,საიდენტიფიკაციო_კოდი,sum(საქონლის_ფასი) as თანხა_რს, მიმღები_ფილიალი
from მესამე
group by 1,2,3;

drop view if exists დღგ_რს;
create view დღგ_რს as
select ტრანსპორტირების_დაწყების_თარიღი,ზედნადების_ნომერი,საიდენტიფიკაციო_კოდი,sum(დღგ_თანხა) as დღგ_რს
from მესამე
group by 1,2,3;

drop view if exists თანხა_პროგრამა ;
create view თანხა_პროგრამა as
select თარიღი,დოკუმენტი,საიდენტიფიკაციო,sum(თანხა) as თანხა_პროგრამა, ფილიალი
from მეცხრე
group by 1,2,3;

drop view if exists დღგ_პროგრამა ;
create view დღგ_პროგრამა as
select თარიღი,დოკუმენტი,საიდენტიფიკაციო, sum(if(დღგ="დღგ",თანხა,0)) as დღგ_პროგრამა
from მეცხრე
group by 1,2,3;

drop view if exists მეთერთმეტე;
create view მეთერთმეტე as
select თარიღი, დოკუმენტი, საიდენტიფიკაციო,შპს, 
ifnull(თანხა_პროგრამა,0) as თანხა_პროგრამა, 
ifnull(თანხა_რს,0) as თანხა_რს, 
ifnull(თანხა_პროგრამა,0)-ifnull(თანხა_რს,0) as თანხა_სხვაობა,
ifnull(დღგ_პროგრამა,0) as დღგ_პროგრამა,
ifnull(დღგ_რს,0) as დღგ_რს,
ifnull(დღგ_პროგრამა-დღგ_რს,0) as დღგ_სხვაობა,
ფილიალი as ფილიალი_პროგრამა, 
მიმღები_ფილიალი as ფილიალი_რს,
if(ფილიალი=მიმღები_ფილიალი,"ფილიალები ემთხვევა","ფილიალები არ ემთხვევა") as ფილიალების_შედარება
from მეათე
left join თანხა_პროგრამა
using(თარიღი,დოკუმენტი,საიდენტიფიკაციო)
left join თანხა_რს
on მეათე.თარიღი=თანხა_რს.ტრანსპორტირების_დაწყების_თარიღი
and მეათე.დოკუმენტი=თანხა_რს.ზედნადების_ნომერი 
and მეათე.საიდენტიფიკაციო=თანხა_რს.საიდენტიფიკაციო_კოდი
left join დღგ_პროგრამა
using(თარიღი,დოკუმენტი,საიდენტიფიკაციო)
left join დღგ_რს
on მეათე.თარიღი=დღგ_რს.ტრანსპორტირების_დაწყების_თარიღი
and მეათე.დოკუმენტი=დღგ_რს.ზედნადების_ნომერი 
and მეათე.საიდენტიფიკაციო=დღგ_რს.საიდენტიფიკაციო_კოდი;

select * from მეთერთმეტე
