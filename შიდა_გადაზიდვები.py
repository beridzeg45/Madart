import pandas as pd
import mysql.connector
import numpy as np

df1 = pd.read_excel(r"C:\Users\berid\OneDrive\Desktop\ზედნადების.xls", dtype={
                    "ზედნადები": "string"})
df2 = pd.read_excel(r"C:\Users\berid\OneDrive\Desktop\პროდუქციის.xls", dtype={
                    "ზედნადების ნომერი": "string"})


df1.columns = ["ზედნადები", "სტატუსი", "მდგომარეობა", "კატეგორია", "ტიპი", "ორგანიზაცია", "თანხა", "მძღოლი", "ავტო", "ტრანსპორტირების_თანხა", "ტრანსპორტირების_დაწყება", "მიწოდების_ადგილი",
               "გააქტიურების_თარიღი", "ტრანსპორტირების_დაწყების_თარიღი", "ჩაბარების_თარიღი", "გაუქმების_თარიღი", "შენიშვნა", "აფ_ID", "STAT", "ტრანსპორტირების_ხარჯი", "ID"]
df2.columns = ["საქონლის_კოდი", "საქონლის_დასახელება", "ზომის_ერთეული", "რაოდენობა", "ერთეულის_ფასი", "საქონლის_ფასი", "დაბეგვრა", "ზედნადების_ნომერი", "სტატუსი", "მყიდველი", "გამყიდველი",
               "ზედნადების_ტიპი", "ტრანსპორტირების_დაწყება", "ტრანსპორტირების_დასრულება", "მძღოლი", "ა/მ ნომერი", "გააქტირუების_თარიღი", "ტრანსპორტირების_დაწყების_თარიღი", "ტრანსპორტირების_თანხა", "შენიშვნა", "ქვე_მომხმარებელი", ]
# "ქვე_მომხმარებელი", შენიშვნას და აფID შორის გაცემული ზედნადების შემთხვევაში!
df1 = df1.where((pd.notnull(df1)), None)
df2 = df2.where((pd.notnull(df2)), None)
mydb = mysql.connector.connect(
    host="localhost", user="root", password="gigaberosql", database="შიდა_გადაზიდვა")
mycursor = mydb.cursor()

#mycursor.execute("CREATE DATABASE შიდა_გადაზიდვა")

mycursor.execute("DROP TABLE IF EXISTS ზედნადების")
mycursor.execute("""CREATE TABLE ზედნადების(ID int AUTO_INCREMENT PRIMARY KEY,ზედნადები varchar(55), სტატუსი varchar(55), მდგომარეობა varchar(55), კატეგორია varchar(55), ტიპი varchar(55), 
                  ორგანიზაცია varchar(255), თანხა decimal(65,10), მძღოლი varchar(255), ტრანსპორტირების_თანხა decimal(65,10), 
                  ტრანსპორტირების_დაწყება varchar(255),  გააქტიურების_თარიღი datetime, ტრანსპორტირების_დაწყების_თარიღი datetime,
                  ჩაბარების_თარიღი datetime)""")
mycursor.execute("DROP TABLE IF EXISTS პროდუქციის")
mycursor.execute("""CREATE TABLE პროდუქციის(ID int AUTO_INCREMENT PRIMARY KEY,საქონლის_კოდი varchar(55), საქონლის_დასახელება varchar(255), ზომის_ერთეული varchar(25), რაოდენობა decimal(65,10), ერთეულის_ფასი decimal(65,10), 
                    საქონლის_ფასი decimal(65,10), დაბეგვრა varchar(55), ზედნადების_ნომერი varchar(55), სტატუსი varchar(55), მყიდველი varchar(255), გამყიდველი varchar(255), ზედნადების_ტიპი varchar(255), 
                    ტრანსპორტირების_დაწყება varchar(255), ტრანსპორტირების_დასრულება varchar(255), ტრანსპორტირების_დაწყების_თარიღი datetime)""")

for row in df1.itertuples():
    mycursor.execute("""INSERT INTO ზედნადების(ზედნადები,სტატუსი, მდგომარეობა, კატეგორია, ტიპი, ორგანიზაცია, თანხა, მძღოლი, ტრანსპორტირების_თანხა,
                        ტრანსპორტირების_დაწყება, გააქტიურების_თარიღი, ტრანსპორტირების_დაწყების_თარიღი, ჩაბარების_თარიღი)
                        VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)""",
                     (row.ზედნადები, row.სტატუსი, row.მდგომარეობა, row.კატეგორია, row.ტიპი, row.ორგანიზაცია, row.თანხა, row.მძღოლი,  row.ტრანსპორტირების_თანხა,
                         row.ტრანსპორტირების_დაწყება,  row.გააქტიურების_თარიღი, row.ტრანსპორტირების_დაწყების_თარიღი, row.ჩაბარების_თარიღი))
for row in df2.itertuples():
    mycursor.execute("""INSERT INTO პროდუქციის(საქონლის_კოდი, საქონლის_დასახელება, ზომის_ერთეული, რაოდენობა, ერთეულის_ფასი, საქონლის_ფასი, დაბეგვრა, ზედნადების_ნომერი, სტატუსი, მყიდველი, გამყიდველი,
                        ზედნადების_ტიპი, ტრანსპორტირების_დაწყება, ტრანსპორტირების_დასრულება, ტრანსპორტირების_დაწყების_თარიღი) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)""",
                     (row.საქონლის_კოდი, row.საქონლის_დასახელება, row.ზომის_ერთეული, row.რაოდენობა, row.ერთეულის_ფასი, row.საქონლის_ფასი, row.დაბეგვრა, row.ზედნადების_ნომერი, row.სტატუსი, row.მყიდველი,
                         row.გამყიდველი, row.ზედნადების_ტიპი, row.ტრანსპორტირების_დაწყება, row.ტრანსპორტირების_დასრულება, row.ტრანსპორტირების_დაწყების_თარიღი))
mydb.commit()
